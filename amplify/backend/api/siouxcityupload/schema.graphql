type Entry @model @auth(rules: [{ allow: private }]) {
  name: String!
  type: EntryType!
  SchoolSport: SchoolSport @hasOne
  ProfessionalTeam: ProfessionalTeam @hasOne
  HallOfFame: HallOfFame @hasOne
  Venue: Venue @hasOne
}

type School @model @auth(rules: [{ allow: private }]) {
  name: String!
  logoUrl: String
  description: String
  sports: [SchoolSport] @hasMany
}

type SchoolSport @model @auth(rules: [{ allow: private }]) {
  name: String!
  entry: Entry @belongsTo
  description: String
  school: School @belongsTo
  startYear: Int
  endYear: Int
  wins: [Win] @hasMany
  images: [Image] @hasMany
}

type ProfessionalTeam @model @auth(rules: [{ allow: private }]) {
  name: String!
  entry: Entry @belongsTo
  startYear: Int
  endYear: Int
  type: ProfessionalTeamType
  description: String
  images: [Image] @hasMany
}

type HallOfFame @model @auth(rules: [{ allow: private }]) {
  entry: Entry @belongsTo
  name: String!
  inductionYear: Int
  sport: String
  description: String
  notableAchievements: [String]
  images: [Image] @hasMany
}

type Venue @model @auth(rules: [{ allow: private }]) {
  entry: Entry @belongsTo
  name: String!
  startYear: Int
  endYear: Int
  location: String
  description: String
  images: [Image] @hasMany
}

enum EntryType {
  HALL_OF_FAME
  PROFESSIONAL
  SCHOOL
  VENUE
}

enum ProfessionalTeamType {
  AUTOMOBILE_RACING
  BASEBALL
  BASKETBALL
  FOOTBALL
  HORSE_DOG_RACING
  ICE_HOCKEY
  SOCCER
  SOFTBALL
  BOAT_CLUB
  COUNTRY_CLUB
}

type Image @model @auth(rules: [{ allow: private }]) {
  name: String!
  url: String!
}

type Win @model @auth(rules: [{ allow: private }]) {
  winTitle: String!
  school: SchoolSport @belongsTo
  year: Int
  notes: String
}
